@startuml

title __VADER's Class Diagram__\n

  namespace Model {
    namespace Vader {
      class Model.Vader.Vader {
          {static} + STATE_DONE : int
          {static} + STATE_FALLING : int
          {static} + STATE_FLYING : int
          {static} + UNIT_MOVE : int
          {static} + UNIT_MOVE_FALLING : int
          ~ color : Color
          ~ height : int
          ~ listeners : ArrayList<Observer>
          ~ movingRight : boolean
          ~ size : int
          ~ state : int
          ~ width : int
          - HEIGHT : int
          - WIDTH : int
          - image : Image
          + Vader()
          + attachListener()
          + detachListener()
          + getCollisionRadius()
          + notifyEvent()
          + render()
          + update()
          - updateState()
      }
    }
  }
  

  namespace Model {
    namespace Vader {
      class Model.Vader.VaderAnimFalling {
          + VaderAnimFalling()
          + animate()
      }
    }
  }
  

  namespace Model {
    namespace Vader {
      class Model.Vader.VaderAnimFlying {
          + VaderAnimFlying()
          + animate()
      }
    }
  }
  

  namespace Model {
    namespace Vader {
      interface Model.Vader.VaderAnimStrategy {
          {abstract} + animate()
      }
    }
  }
  

  Model.Vader.Vader .up.|> Controller.Observer.Subject
  Model.Vader.Vader -up-|> Model.GameFigure
  Model.Vader.Vader o-- Model.Vader.VaderAnimStrategy : animStrategy
  Model.Vader.VaderAnimFalling .up.|> Model.Vader.VaderAnimStrategy
  Model.Vader.VaderAnimFalling o-- Model.Vader.Vader : context
  Model.Vader.VaderAnimFlying .up.|> Model.Vader.VaderAnimStrategy
  Model.Vader.VaderAnimFlying o-- Model.Vader.Vader : context


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
