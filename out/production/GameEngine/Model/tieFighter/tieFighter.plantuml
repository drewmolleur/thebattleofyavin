@startuml

title __TIEFIGHTER's Class Diagram__\n

  namespace Model {
    namespace tieFighter {
      class Model.tieFighter.tieFighter {
          {static} + STATE_DONE : int
          {static} + STATE_FALLING : int
          {static} + STATE_FLYING : int
          {static} + UNIT_MOVE : int
          {static} + UNIT_MOVE_FALLING : int
          ~ color : Color
          ~ height : int
          ~ listeners : ArrayList<Observer>
          ~ movingRight : boolean
          ~ size : int
          ~ state : int
          ~ width : int
          - HEIGHT : int
          - WIDTH : int
          - image : Image
          + attachListener()
          + detachListener()
          + getCollisionRadius()
          + notifyEvent()
          + render()
          + tieFighter()
          + update()
          - updateState()
      }
    }
  }
  

  namespace Model {
    namespace tieFighter {
      class Model.tieFighter.tieFighterAnimFalling {
          + animate()
          + tieFighterAnimFalling()
      }
    }
  }
  

  namespace Model {
    namespace tieFighter {
      class Model.tieFighter.tieFighterAnimFlying {
          + animate()
          + tieFighterAnimFlying()
      }
    }
  }
  

  namespace Model {
    namespace tieFighter {
      interface Model.tieFighter.tieFighterAnimStrategy {
          {abstract} + animate()
      }
    }
  }
  

  Model.tieFighter.tieFighter .up.|> Controller.Observer.Subject
  Model.tieFighter.tieFighter -up-|> Model.GameFigure
  Model.tieFighter.tieFighter o-- Model.tieFighter.tieFighterAnimStrategy : animStrategy
  Model.tieFighter.tieFighterAnimFalling .up.|> Model.tieFighter.tieFighterAnimStrategy
  Model.tieFighter.tieFighterAnimFalling o-- Model.tieFighter.tieFighter : context
  Model.tieFighter.tieFighterAnimFlying .up.|> Model.tieFighter.tieFighterAnimStrategy
  Model.tieFighter.tieFighterAnimFlying o-- Model.tieFighter.tieFighter : context


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
